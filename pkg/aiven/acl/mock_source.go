// Code generated by mockery v2.9.4. DO NOT EDIT.

package acl

import (
	kafka_nais_io_v1 "github.com/nais/liberator/pkg/apis/kafka.nais.io/v1"
	mock "github.com/stretchr/testify/mock"
)

// MockSource is an autogenerated mock type for the Source type
type MockSource struct {
	mock.Mock
}

// ACLs provides a mock function with given fields:
func (_m *MockSource) ACLs() kafka_nais_io_v1.TopicACLs {
	ret := _m.Called()

	var r0 kafka_nais_io_v1.TopicACLs
	if rf, ok := ret.Get(0).(func() kafka_nais_io_v1.TopicACLs); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(kafka_nais_io_v1.TopicACLs)
		}
	}

	return r0
}

// Pool provides a mock function with given fields:
func (_m *MockSource) Pool() string {
	ret := _m.Called()

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// TopicName provides a mock function with given fields:
func (_m *MockSource) TopicName() string {
	ret := _m.Called()

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}
