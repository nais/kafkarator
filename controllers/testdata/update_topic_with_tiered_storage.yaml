config:
  description: adding tiered storage to topic configuration
  projects:
    - some-pool

aiven:
  existing:
    acls:
      - acl_id: new-well-known-id
        username: myteam_myapplication_1c62faf5_*
        permission: read
        topic: myteam.mytopic
    topics:
      - topic_name: myteam.mytopic
        partitions:
          - partition: 1
        replication: 3
        config:
          cleanup_policy:
            value: delete
          max_message_bytes:
            value: 1_048_588
          min_insync_replicas:
            value: 2
          retention_bytes:
            value: -1
          retention_ms:
            value: 3_240_000_000
          segment_ms:
            value: 604_800_000
          local_retention_bytes:
            value: -2
          local_retention_ms:
            value: -2
        tags:
          - key: created-by
            value: Kafkarator
  created:
    topics: [ ]
    acls: [ ]
  updated:
    topics:
      myteam.mytopic:
        topic_name: myteam.mytopic
        replication: 3
        partitions: 2
        config:
          cleanup_policy: delete
          max_message_bytes: 2048
          min_insync_replicas: 2
          retention_bytes: -1
          retention_ms: 43_200_000
          local_retention_bytes: -2
          local_retention_ms: 10_800_000
          segment_ms: 86_400_000
        tags:
          - key: created-by
            value: Kafkarator
  deleted:
    acls: [ ]

topic:
  apiVersion: kafka.nais.io/v1
  kind: Topic
  metadata:
    name: mytopic
    namespace: myteam
    labels:
      team: myteam
  spec:
    pool: some-pool
    config:
      maxMessageBytes: 2048
      retentionHours: 12
      localRetentionHours: 3
      partitions: 2
      segmentHours: 24
    acl:
      - access: read
        team: myteam
        application: myapplication

output:
  status:
    synchronizationState: RolloutComplete
    message: Topic configuration synchronized to Kafka pool
    fullyQualifiedName: myteam.mytopic
