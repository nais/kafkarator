config:
  description: changing ACLs for a topic triggers deletion of invalid ACLs, creation of new ones, and not touching valid ones
  projects:
    - some-pool

aiven:
  existing:
    acls:
      - id: acl-1
        username: myteam.myapplication*
        permission: read
        topic: myteam.mytopic
      - id: acl-1-new
        username: myteam_myapplication_1c62faf5_*
        permission: read
        topic: myteam.mytopic
      - id: acl-2
        username: otherteam.otherapplication*
        permission: write
        topic: myteam.mytopic
      - id: acl-2-new
        username: otherteam_otherapplication_21a2c9c6_*
        permission: write
        topic: myteam.mytopic
      - id: acl-3
        username: myteam.no-wildcard-680515dc
        permission: readwrite
        topic: myteam.mytopic
    topics:
      - topic_name: myteam.mytopic
        cleanup_policy: "delete"
        partitions:
          - partition: 1
        replication: 3
        config:
          max_message_bytes:
            value: 1048588
          min_insync_replicas:
            value: 2
          retention_bytes:
            value: -1
          retention_ms:
            value: 604800000
          segment_ms:
            value: 604800000
          local_retention_bytes:
            value: -2
          local_retention_ms:
            value: -2
  created:
    topics: []
    acls:
      - username: very-much-too-long-t_very-much-too-long-application_ca5cb3d9_*
        permission: read
        topic: myteam.mytopic
      - username: myteam_myapplication_1c62faf5_*
        permission: readwrite
        topic: myteam.mytopic
      - username: myteam_no-wildcard_86f0c73b_*
        permission: readwrite
        topic: myteam.mytopic
      - username: redundant-team_application_18515795_*
        permission: read
        topic: myteam.mytopic
  updated:
    topics: {}
  deleted:
    acls:
      - acl-1
      - acl-1-new
      - acl-2
      - acl-3

topic:
  apiVersion: kafka.nais.io/v1
  kind: Topic
  metadata:
    name: mytopic
    namespace: myteam
    labels:
      team: myteam
  spec:
    pool: some-pool
    acl:
      - access: write
        team: otherteam
        application: otherapplication
      - access: readwrite
        team: myteam
        application: myapplication
      - access: read
        team: very-much-too-long-team-name
        application: very-much-too-long-application-name
      - access: readwrite
        team: myteam
        application: no-wildcard
      - access: read
        team: team-redundant-team
        application: team-redundant-team-application

output:
  status:
    synchronizationState: RolloutComplete
    message: Topic configuration synchronized to Kafka pool
    fullyQualifiedName: myteam.mytopic
